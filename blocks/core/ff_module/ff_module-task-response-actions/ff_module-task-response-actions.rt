<rt-require dependency="../../ff_container/ff_container-control-bar/ff_container-control-bar" as="ContainerControlBar"/>
<rt-require dependency="../../ff_container/ff_container-control-bar/_src/ControlBarSet.js" as="ControlBarSet"/>
<rt-require dependency="../../ff_module/ff_module-button/ff_module-button" as="Button"/>
<rt-require dependency="../../ff_module/ff_module-dropdown-button/ff_module-dropdown-button-component/ff_module-dropdown-button-component" as="DropdownButton"/>
<rt-require dependency="../../ff_module/ff_module-task-event/_src/events" as="events" />

<div class="ff_module-task-response-actions">
    <ContainerControlBar
        modifier= "right"
        key="controlBarUpper">
        <ControlBarSet>
            <Button
                key="{events.types.comment}"
                modifier="primary-compact"
                text="Comment"
                onClick="()=>this.props.onClick({type: events.types.comment})"
            />
            <Button
                key="{events.types.markAndGrade}"
                modifier="primary-compact"
                text="Mark/Grade"
                onClick="()=>this.props.onClick({type: events.types.markAndGrade})"
            />
            <DropdownButton
                id="more-actions"
                key="more-actions"
                modifier="primary-compact-right"
                classes="ff_module-task-response-actions__dropdown"
                text="More"
                list= "{[
                        {
                            text: 'Stamp Response as Seen',
                            key: events.types.stampResponseAsSeen,
                            onClick: ()=>this.props.onClick({ type: events.types.stampResponseAsSeen })
                        }, {
                            text: 'Request Resubmission',
                            key: events.types.requestResubmission,
                            onClick: ()=>this.props.onClick({ type: events.types.requestResubmission })
                        }, {
                            text: 'Confirm Student is Excused',
                            key: events.types.confirmStudentIsExcused,
                            onClick: ()=>this.props.onClick({ type: events.types.confirmStudentIsExcused })
                        },{
                            text: 'Confirm Task is Complete',
                            key: events.types.confirmTaskIsComplete,
                            onClick: ()=>this.props.onClick({ type: events.types.confirmTaskIsComplete })
                        },
                    ]}"
                />

        </ControlBarSet>
    </ContainerControlBar>
</div>
